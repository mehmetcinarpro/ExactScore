@model HomeViewModel
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}

<div class="text-center">
    <h1>Don't forget!</h1>
    <table class="table">
        <tbody>
            @foreach (var item in Model.MissingPredictions)
            {
                <tr>
                    <td>
                        @item.Date.ToString("yyyy-MM-dd HH:mm")
                    </td>
                    <td>
                        @item.HomeTeam.Name - @item.AwayTeam.Name
                    </td>
                    <td>
                        @if (item.Date > DateTime.Now.AddMinutes(5))
                        {
                            <a asp-controller="Fixtures" asp-action="Prediction" asp-route-id="@item.FixtureId">Give score</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h1>Prediction in progress!</h1>
    <table class="table">
        <tbody>
            @foreach (var item in Model.InProgressPredictions)
            {
                <tr>
                    <td>
                        @item.Date.ToString("yyyy-MM-dd HH:mm")
                    </td>
                    <td>
                        @item.HomeTeam.Name - @item.AwayTeam.Name
                    </td>
                    <td>@item.HomeGoal - @item.AwayGoal</td>
                    <td>
                        @if (item.Date > DateTime.Now.AddMinutes(5))
                        {
                            <a asp-controller="Fixtures" asp-action="Prediction" asp-route-id="@item.FixtureId">Edit score</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>


    <h1>Standings</h1>
    <table class="table table-responsive-sm">
        <thead>
            <tr>
                <th>
                    User
                </th>
                <th>
                    Played
                </th>
                <th>
                    XScore
                </th>
                <th>
                    Win
                </th>
                <th>
                    Lost
                </th>
                <th>
                    Points
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Standings)
            {
                <tr class=@(SignInManager.IsSignedIn(User) && user?.UserName == item.UserName ? "current-user" : "")>
                    <td>
                        @item.UserName
                    </td>
                    <td>
                        @item.Played
                    </td>
                    <td>
                        @item.ExactScore
                    </td>
                    <td>
                        @item.Win
                    </td>
                    <td>
                        @item.Lost
                    </td>
                    <td>
                        @item.Point
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (user?.UserName == "memo")
    {
        <form asp-action="UpdateStandings">
            <input type="submit" value="Update Standings" class="btn btn-outline-primary" />
        </form>
    }
</div>
